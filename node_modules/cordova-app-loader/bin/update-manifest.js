var path = require('path');
var fs = require('fs');
var crypto = require('crypto');





var manifestFile = 'manifest.json';
var rootDir = process.cwd();

var args = process.argv.slice(-2);
args.forEach(function(arg){
  if(arg.indexOf('.json') > -1) {
    manifestFile = arg;
  } else if(arg.indexOf('update-manifest') < 0){
    rootDir = arg;
  }
});
manifestFile = path.resolve(manifestFile);
rootDir = path.resolve(rootDir);
console.log('root='+rootDir);
console.log('manifest='+manifestFile);

//扫描所有文件


var manifest;
try {
  manifest = fs.readFileSync(manifestFile,'utf8');
  manifest = JSON.parse(manifest);
  if(typeof manifest !== "object") throw new Error('Manifest not an object!');
  if(!manifest.files) throw new Error("Manifest has no files!");
} catch(e){
  console.error('Invalid '+path.resolve(manifestFile),e,manifest);
  process.exit(1);
}
manifest.files={};
scanFolder(rootDir);

function scanFolder(path){
  var fileList = [],
      folderList = [],
      walk = function(path, fileList, folderList){
        var files = fs.readdirSync(path);
        files.forEach(function(item) {
          var tmpPath = path + '/' + item,
              stats = fs.statSync(tmpPath);

          if (stats.isDirectory()) {
            walk(tmpPath, fileList, folderList);
            folderList.push(tmpPath);
          } else {
            console.log(tmpPath);
            var p = tmpPath.replace(rootDir+"/","");
            console.log(p);
            buildOne(p)
            fileList.push(tmpPath);
          }
        });
      };

  walk(path, fileList, folderList);

}
function checksum(filename){
  var data = fs.readFileSync(filename, 'utf8');
  return crypto.createHash('sha1').update(data).digest('hex');
}
var versionChecksum = "";
function buildOne(filepath){
  try {
    var filename = filepath;
    var version = checksum(rootDir+"/"+filename);
    versionChecksum += version;
    if(!manifest.files[filename]){
        manifest.files[filename] = {}
    }
    manifest.files[filename].version = version;
    manifest.files[filename].filename= filepath;
  } catch(e){
    console.error('Could not hash file.',e);
  }
}


if(typeof manifest.version === 'number'){
  manifest.version++;
} else {
  manifest.version = crypto.createHash('sha1').update(versionChecksum).digest('hex');
}

try {
  fs.writeFileSync(
      path.resolve(rootDir, manifestFile),
      JSON.stringify(manifest,null,2)
    );
} catch(e) {
  console.error('Could not write manifest.json',e);
}